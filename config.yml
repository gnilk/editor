main:
  backend: ncurses
  # select the keymap default for the backend
  # 'default' is a reserved word - replace with your file name when forking it...
  keymap: default
  threaded_syntaxparser: yes
  plugin_directory: Plugins
  bootstrap_script_comment: "//"
  bootstrap_scripts:
    - ~/.config/gedit/bootstrap.script
    - ~/.gedit

macos:
  allow_kbd_hook: yes

linux:

sdl:
  default_width: 1024
  default_height: 768
  # Defines the SDL window rendering backend 'opengl', 'vulkan', 'metal' - empty or unknown means default...
  backend: "opengl"
  # When drawing underlined text this defines how many pixels from the regular baseline of the font to offset the line
  text_underline_margin: 16
  # this increases the spacing between lines - it is added to the baseline of the font
  line_margin: 4
  # unused, all is using the 'keymap' section - this considered for the future...
  keymap: "sdl3_default.keymap"

ncurses:
  timeoutKeyEvent: 500
  keymap: "ncurses_default.keymap"

editor:
  # content_first is CLion/Sublime style (no = VSCode style, cursor first)
  pgupdown_content_first: yes


#
# Add ability to include user-name, and other things here (working dir???)
#
commandmode:
  prompt: "ed>"
  cmdlet_prefix: "."


quickmode:
  # this will leave the quick-command mode automatically when a successfull command has been executed
  # while this can be nice, it's cumbersome if used for navigation...
  leave_automatically: false
  leave_when_switching_view: true
  prompt_default: "Q:"
  prompt_search: "S:"
  prompt_cmdlet: "C:"

quickmode_keymap: {
  actions: {
    CycleActiveViewNext: "']'",
    CycleActiveViewPrev: "'['",
    CycleBufferNext : "'\\'",
    CycleBufferPrev : "'\''",
    LeaveCommandMode : KeyCode_Escape,
    CommitLine : KeyCode_Return,
    StartSearch : "'/'",
    LastSearch : "'?'",
    NextSearchResult : "'n'",
    PrevSearchResult : "'p'",
    GotoLine : "'g'",
  }
}

keymap: {
    # Editor will read this and check the modifier mask controlling an action
    # For instance, the 'SelectionModifier' is used to enable/disable selections
    modifiers: {
      SelectionModifier: KeyCode_Shift,
      CopyPasteModifier: KeyCode_Cmd,
      UINavigationModifier : KeyCode_Alt,
    },
    # We could allow different actions depending on what we have..
    # for instance when a 'modal' is active we don't really need all of this...
    # and we want other 'action names' (Esc = CloseModal, etc..)
    actions: {
      NavigateLineUp : KeyCode_UpArrow + @SelectionModifier,
      NavigateLineDown : KeyCode_DownArrow + @SelectionModifier,
      NavigateLeft : KeyCode_LeftArrow + @SelectionModifier,
      NavigateRight : KeyCode_RightArrow + @SelectionModifier,
      NavigatePageUp : KeyCode_PageUp + @SelectionModifier,
      NavigatePageDown : KeyCode_PageDown + @SelectionModifier,
      NavigateLineEnd : KeyCode_End + @SelectionModifier,
      NavigateLineHome : KeyCode_Home + @SelectionModifier,
      CopyToClipboard : CopyPasteModifier + 'c',
      PasteFromClipboard : CopyPasteModifier + 'v',
      EnterCommandMode : KeyCode_Escape,
      CycleActiveViewNext : "UINavigationModifier + ']'",
      CycleActiveViewPrev : "UINavigationModifier + '['",
      CycleBufferNext : "UINavigationModifier + '\\'",
      CycleBufferPrev : "UINavigationModifier + '\''",
      CycleActiveEditor : KeyCode_F3,
      CommitLine : KeyCode_Return,
      CommentLine: CopyPasteModifier + '/',
      GotoFirstLine : KeyCode_Command + KeyCode_Home + @SelectionModifier,
      GotoLastLine : KeyCode_Command + KeyCode_End + @SelectionModifier,
      GotoTopLine : KeyCode_Command + KeyCode_PageUp,
      GotoBottomLine : KeyCode_Command + KeyCode_PageDown,


      # This doesn't work unless we are in modal-mode..
      # CloseModal : KeyCode_Escape,
    }
}

# old keymap
# This keymap is tested with macbook with external keyboard..
# Note: Keymap should point to a file instead..
temptemp: {
  # test
  #KeyCode_Shift + KeyCode_UpArrow : NavigateEnd,
  #KeyCode_Ctrl + KeyCode_Shift + KeyCode_UpArrow : NavigateHome,
  # properly mapped
  KeyCode_UpArrow : NavigateLineUp,
  KeyCode_DownArrow : NavigateLineDown,

  # Test - map to same action - but NavigateLineDown will check if this is pressed and invoke selection..
  KeyCode_Shift + KeyCode_DownArrow : NavigateLineDown,
  KeyCode_Shift + KeyCode_UpArrow : NavigateLineUp,

  # Should be able to mark a modifier as 'optional' for an action
  # like: KeyCode_DownArray + @KeyCode_Shift : NavigateDown
  # or:   @KeyCode_Shift + KeyCode_DownArray : NavigateDown
  #
  # This would then insert two actions in the table one with 'Shift' and one without..
  # Or Perhaps lik this:
  #
  # @SelectionModifier + KeyCode_DownArray : NavigateDown
  #
  # Change this to:
  # Action = Key combo
  # Will allow for other stuff like: var <variable> : some key code stuff
  # and then reuse/substitue later will be easier and more 'logical'
  # It also reads like a proper expression...
  #

  KeyCode_LeftArrow : NavigateLineStepLeft,
  KeyCode_RightArrow : NavigateLineStepRight,
  KeyCode_PageUp : NavigatePageUp,
  KeyCode_PageDown : NavigatePageDown,
  KeyCode_Return : CommitLine,
  KeyCode_Command + KeyCode_Home : GotoFirstLine,
  KeyCode_Command + KeyCode_End : GotoLastLine,
  KeyCode_Command + KeyCode_PageUp : GotoTopLine,
  KeyCode_Command + KeyCode_PageDown : GotoBottomLine,
  # doesnt work on MacBookPro laptop keyboard (ALT+Left/RightArrow return 'b'/'f' - modifier is correct!)
  KeyCode_LeftCmd + KeyCode_LeftArrow : NavigateLineWordLeft,
  KeyCode_LeftCmd + KeyCode_RightArrow : NavigateLineWordRight,
  KeyCode_Escape : CycleActiveView,
  KeyCode_F3 : CycleActiveEditor,

  KeyCode_Command + 'c' : CopyToClipboard,
  KeyCode_Command + 'v' : PasteFromClipboard,

}

# we

terminal:
  shell: /bin/zsh
  init: -is
  # This is a set of shell commands run after starting the shell..
  # Consider merging with the generic main bootstrap script..
  bootstrap:
    - SET XYZ=4
    - export path=%path%

theme:
  colorfile: "colors.json"

languages:
  default:
    indent: 4
    tabsize: 4
    insert_spaces: yes
  cpp:
    insert_closing_brace: yes
    auto_indent: yes
    continue_comment: yes
